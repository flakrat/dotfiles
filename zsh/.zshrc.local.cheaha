function mgrep () {
  grep $1 ~/.zsh_history_cheaha_master.mhanby
}

# All cluster nodes
if [[ "$(hostname -s)" =~ "cheaha-master|login|c[0-9][0-9][0-9][0-9]" ]]; then # BrightCM Compute Nodes
  function cheaha_user_lookup() {
    ldapsearch -LLL -x  -h ldapserver -b 'dc=cm,dc=cluster' uid=$1 cn mail | grep -v ^dn | awk -F: '{print $2}' | sed -e 's/^ //';
  }

  function cheaha_user_lookup_full() {
    ldapsearch -LLL -x  -h ldapserver -b 'dc=cm,dc=cluster' uid=$1;
  }

  ## Begin GPFS
  alias mmlsquota_scratch='mmlsquota -v -j scratch BigGreen --block-size=auto'
  alias mmlsquota_user='mmlsquota -u $USER BigGreen:user --block-size=auto'
  mmlsquota_project () {
    mmlsquota -v -j $1 BigGreen --block-size auto
  }
  ## End GPFS

  ## Begin Slurm aliases
  function kstat() {
    module load rc/kstat > /dev/null 2> /dev/null
    /share/apps/kstat/*/kstat $@
    module unload rc/kstat > /dev/null 2> /dev/null
  }
  # WIP - Hold all pending jobs for user
#  function scontrol_hold_user () {
#    if [[ "$1" == "" ]]; then
#      echo "No user specified!"
#      #exit 1
#    else
#      user=$1
#      script=/tmp/holduser-$user-$(date "+%Y.%m.%d-%H.%M.%S")
#      echo '#!/bin/bash' > $script
#      squeue --user=$user -h -o "sudo /cm/shared/apps/slurm/current/bin/scontrol hold %i" >> $script
#      chmod +x $script
#      echo "The following script will now be executed to hold pending jobs: $script"
#      /bin/bash $script
#    fi
#  }
  alias slurm_top_running='squeue --state running | grep -v PARTIT | awk "{print \$4}" | sort | uniq -c | sort -n -r | head -n 10'
  alias slurm_top_pending='squeue --state pending | grep -v PARTIT | awk "{print \$4}" | sort | uniq -c | sort -n -r | head -n 10'
  alias scontrol_admin="sudo /cm/shared/apps/slurm/current/bin/scontrol"
  alias scancel_admin="sudo /cm/shared/apps/slurm/current/bin/scancel"
  alias sacctmgr_admin="sudo /cm/shared/apps/slurm/current/bin/sacctmgr"
  alias sinfo_gres='sinfo -o "%15N %10c %10m  %25f %10G"'
  alias sinfo_downhosts="sinfo --states=down --noheader -N | awk '{print \$1}' | sort | uniq"
  slurm_disable_user () {
    sudo /cm/shared/apps/slurm/current/bin/sacctmgr modify user $1 set maxjobs=0
  }
  slurm_enable_user () {
    sudo /cm/shared/apps/slurm/current/bin/sacctmgr modify user $1 set maxjobs=-1
  }
  sinfo_drained_reason () {
    for node in $(sinfo --states=drain --noheader -N | awk '{print $1}' | sort | uniq); do
      reason=`scontrol show node $node | egrep "NodeName|Reason" | sed -E -e 's/Arch.*$|Cores.*$//g' | tr '\n' '-'`
      reason="${reason//Reason=/}"
      reason="${reason//NodeName=/}"
      echo $reason
    done
  }
  sinfo_drained_reason_mem () {
    for node in $(sinfo --states=drain --noheader -N | awk '{print $1}' | sort | uniq); do
      scontrol show node $node | egrep "NodeName|mem|Reason"
    done
  }
  scontrol_undrain_all () {
    for node in $(sinfo --states=drain --noheader | awk '{print $6}' | sort | uniq); do
      sudo /cm/shared/apps/slurm/current/bin/scontrol update NodeName="$node" State=undrain
    done
  }
  alias sinfo_drained="sinfo --states=drain --noheader -N | awk '{print \$1}' | sort | uniq"
  #alias sacct_full="sacct --allusers --format=User,JobID,JobName,account,Start,End,State,Timelimit,elapsed,NCPUS,NNodes,NTasks,QOS,ReqMem,MaxRss,ExitCode,NodeList"
  alias sacct_full="sacct --allusers --format=User,JobID,JobName,Partition,State,Submit,TimeLimit,Start,End,Elapsed,ReqCPU,ReqMem,MaxRSS,MaxVMSize,NNodes,NTasks,Reservation,NodeList"
  alias squeue_full='squeue --format "%.8i %.9P %.8j %.8u %.6D %.4C %.6Q %.4t %.11M %.16S %.16L %.16e %.14R %.14Z %.25o"'
  alias squeue_full2='squeue --format "%.8i %.9P %.8j %.8u %.6D %.4C %.4t %.11M %.16S %.16L %.16e %.14R %Z %o"'
  alias squeue_full3='squeue -O "jobid,partition,name,username,tres,state,reasonlist,starttime,timeleft,workdir"'
  alias squeue_jobscript='squeue --format "%.10i %.12u %o"'
  alias squeue_jobdir='squeue --format "%.10i %.12u %Z"'
  alias squeue_jobstarttime='squeue --format "%.10i %.12u %S"'
  alias squeue_jobendtime='squeue --format "%.10i %.12u %e"'
  alias squeue_jobruntime='squeue --format "%.10i %.12u %M"'
  alias squeue_jobtimeleft='squeue --format "%.10i %.12u %L"'
  alias squeue_pending="squeue --state pending --array --noheader | awk '{print \$4}' | sort | uniq -c  | sort -n"
  alias squeue_running="squeue --state running --array --noheader | awk '{print \$4}' | sort | uniq -c  | sort -n"
  function sinfo_nodemem() {
    for node in $(scontrol show node | grep NodeName | awk '{print $1}' | awk -F= '{print $2}'); do
      scontrol show node $node | egrep 'NodeName|RealMemory' | awk '{print $1}' | tr '\n' '\t';
      echo;
    done
  }
  ## Nvidia GPU Cuda stuff
  alias nvidia-query="nvidia-smi --query-gpu=gpu_name,gpu_bus_id,vbios_version --format=csv"

  # lsof alternative because lsof hangs when a file system (NSF usually) is unresponsive
  function lsof_alt() {
    for FD in /proc/*/fd/*; do
      readlink $FD 2> /dev/null | grep ^/$1 ;
    done
  }
  # Alias to display the current number of allocated cpu cores
  alias used_cores='sinfo -a -o "%C"'
#  function used_cores()  {
#    n=0;
#    for cpus in $(squeue --all --noheader --states=running --format "%.6C" ); do
#      let n=$n+cpus;
#    done ;
#    echo $n
#  }
fi
# End All cluster nodes

# BrightCM Master Node
if [[ "$(hostname -s)" =~ "cheaha-master" ]]; then
  # Uncomment the following line if you don't like systemctl's auto-paging feature:
  # export SYSTEMD_PAGER=
  module load cmsh
  #module load rc-base
  #module load slurm

  # Cheaha-master aliases
  alias bright_release='cmsh -n -c "main; versioninfo"'
  alias downhosts='cmsh -n -c "device status | grep DOWN"'
  alias ansible_root='sudo /usr/bin/ansible -i ~mhanby/.ansible/hosts'
  alias reboot_computenodes='sudo /usr/bin/ansible -i ~mhanby/.ansible/hosts computenodes -a "/sbin/shutdown
-r +1" --one-line'

  export PATH=${PATH}:/opt/dell/srvadmin/bin:/opt/dell/srvadmin/sbin:/root/bin
  export PATH=${PATH}:/usr/lpp/mmfs/bin
  export PATH=${PATH}:/share/apps/rc/sbin
elif [[ "$(hostname -s)" =~ "shealy|login[0-9][0-9]|c[0-9][0-9][0-9][0-9]" ]]; then # BrightCM Compute Nodes
  #module load rc-base
elif [[ "$(hostname -s)" =~ "compute" ]]; then # Begin Rocks 5.5 Cheaha config
  #eval `perl -I ~/perl5/lib/perl5 -Mlocal::lib`
  export PATH="/sbin:/usr/sbin:/share/apps/atlab/sbin:${PATH}"
  export EDITOR="/usr/bin/vim"
  . /etc/profile.d/modules.sh
  export MODULEPATH=/share/apps/tools/easybuild/modules/all:$MODULEPATH
  export EASYBUILD_INSTALLPATH=/share/apps/tools/easybuild
  export PATH=/share/apps/atlab/bin:${PATH}
fi # End CHEAHA config

# Host agnostic alias and functions
alias histall="history -i 1"
alias igrep="grep -i"
alias rpmarch="rpm -qa --queryformat='%{N}-%{V}-%{R}-.%{arch}\n'"
alias vmlist="virsh --connect qemu:///system list"
alias virsh-sys="virsh --connect qemu:///system"
#alias proclist='ps -eo user,pid,ppid,pcpu,pmem,stat,start_time,etime,cmd --sort=-pcpu,-pmem | egrep -v "  0.[0-9]  0.[0-9] "'
alias proclist='ps -eo user,pid,ppid,pcpu,pmem,stat,start_time,etime,cmd --sort=-pcpu,-pmem | egrep -v "  0.[0-9]  0.[0-9] " | egrep -v "auditbeat|metricbeat|vscode|gnome-shell|desktop|firefox|slideshow|rsync|polkitd|sftp-server|notty|mhanby|screensaver|mmfsd|atom"'
alias memlist='ps -eo user,pid,ppid,cmd:75,%mem,%cpu --sort=-%mem | head -n 15'
alias topmem="ps aux --sort=-%mem | awk 'NR<=10{print \$0}'"
function vmlist-remote() { virsh --connect qemu+ssh://$1/system list; }
function virsh-sys-remote() { virsh --connect qemu+ssh://$1/system; }
# Sort processes by top virtmem usage
function proc-by-virtmem() { ps -e -o pid,vsz,comm= | sort -r -n -k 2; }

function proclog() {
  for n in {1..90}; do
    out="$HOME/log/$(hostname -s)_proclist_$(date +%Y%m%d).log"
    curday="$(date +%Y%m%d)"
    while [ $(date +%Y%m%d) -le $curday ]; do
      echo "======   $(date)   ======" | tee -a $out;
      proclist | egrep -v 'gnome-shell|desktop|firefox|slideshow|netdata|polkitd|sftp-server|notty|mhanby|screensaver|mmfsd' | tee -a $out;
      sleep 60;
    done;
    gzip $out;
  done
}

# Retrieve serial numbers for the DDN SFA controllers
function serialnum() {
  echo "SFA14k:"
  ssh user@sfa14k1 "show enc al" | grep "Production serial numb"
  echo "SFA12k:"
  ssh user@sfa12k1 "show enc al" | grep "Production serial numb"
}

# Fail2ban Aliases
alias banlist-sshd='sudo ipset list fail2ban-sshd'

# Firewalld Aliases
alias firewall-rejects='sudo firewall-cmd --direct --get-all-rules'

# Failed SSH login attempts on RHEL/CENTOS
alias failed_ssh='journalctl _SYSTEMD_UNIT=sshd.service  --reverse --no-tail | grep -i fail'

# Git Stuff
# Don't use the pager for 'git diff', i.e. dump it all out to the terminal at once
alias gitdiff='git --no-pager diff'

# VI Aliases
# Open file in readonly and no swap
alias viro='vim -Mn'
# Open vim without reading .vimrc, much faster (not so be confused with
# vim.tiny binary, which still sources .vimrc
alias vimtiny='vim -u NONE'
# shortcuts to lower and upper case strings
alias tolower="tr '[:upper:]' '[:lower:]'"
alias toupper="tr '[:lower:]' '[:upper:]'"
# https://www.cyberciti.biz/tips/bash-aliases-mac-centos-linux-unix.html
alias mountpretty='mount |column -t'
alias datepretty='date +"%Y%m%d_%H%M%S"'
alias ports='netstat -tulanp'
#alias wakeupnas01='/usr/bin/wakeonlan 00:11:32:11:15:FC'
alias iptlist='sudo /sbin/iptables -L -n -v --line-numbers'
alias iptlistin='sudo /sbin/iptables -L INPUT -n -v --line-numbers'
alias iptlistout='sudo /sbin/iptables -L OUTPUT -n -v --line-numbers'
alias iptlistfw='sudo /sbin/iptables -L FORWARD -n -v --line-numbers'
alias firewall=iptlist
## pass options to free ##
alias meminfo='free -m -l -t'

## get top process eating memory
alias psmem='ps auxf | sort -nr -k 4'
alias psmem10='ps auxf | sort -nr -k 4 | head -10'

## View server hardware model (VMware, KVM, PowerEdge, etc...)
alias host_model='cat /sys/devices/virtual/dmi/id/product_name'

## get top process eating cpu ##
alias pscpu='ps auxf | sort -nr -k 3'
alias pscpu10='ps auxf | sort -nr -k 3 | head -10'

## Get server cpu info ##
alias cpuinfo='lscpu'

## get GPU ram on desktop / laptop##
alias gpumeminfo='grep -i --color memory /var/log/Xorg.0.log'
## grep without comments
alias nocomment='grep -Ev '\''^(#|$|;)'\'''
alias lt='ls -alrt'
alias tf='tail -f '
alias psg='ps auxf | grep '
alias fastping='ping -c 5 -s.2'
mcd () {
  mkdir -p $1;
  cd $1
}
alias filehogs="sudo lsof -w | awk '{ print \$2 \"\\t\" \$1; }' | sort -rn | uniq -c | sort -rn | head"
alias openfiles="cat /proc/sys/fs/file-nr"

alias vnclist="ps -eo user:25,pid,lstart,cmd --sort=user | grep Xvnc | grep -v grep | grep -v thinlinc | awk
'{print \$1 \"\t\" \$9 \"\t\" \$2 \"\t\" \$4 \"-\" \$5 \"-\" \$7 \"_\" \$6 \"\t\" \$18 \"\t\" \$23}' | column -s \$'\t' -t"
alias vnclist_count="ps -eo user:25,cmd --sort=user | grep Xvnc | grep -v grep | grep -v thinlinc | awk '{print \$1}' | uniq -c | grep -v ' 1 ' | sort -r"
alias vnclist_cputime="ps -eo etimes:25,time:25,user:25,pid,lstart,cmd --sort=+user | grep Xvnc | grep -v grep | grep -v thinlinc | sort -k1 -r -n | awk '{print \$3 \"\t\" \$4 \"\t\" \$6 \"-\" \$7 \"-\" \$9 \"_\" \$8 \"\t\" \$18 \"\t\" \$24 \"\t\" \$2}' | sort -k6 -n | column -s \$'\t' -t"
alias sccm_version="grep 'Build number' /var/opt/microsoft/scxcm.log | awk '{print \$4}' | tail -n 1"
alias sccm_version_all="ansible sccm -m shell -a \"grep 'Build number' /var/opt/microsoft/scxcm.log | awk '{print \\\$4}' | tail -n 1\" --one-line"
alias ansible_group_list="ansible localhost -m debug -a 'var=groups.keys()'"
alias ansible_group_membership="ansible localhost -m debug -a 'var=groups'"
