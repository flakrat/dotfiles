# status bar
set-option -g status-utf8 on

set -g status-interval 1
set -g status-justify left
set -g status-left-length 80
set -g status-right-length 140
set -g status-left '#[fg=green]#H #[fg=white]|'
set -g status-right '#[fg=green,bright]#(/usr/bin/uptime|cut -d " " -f 10-) #[fg=white]| #[fg=blue]%a %b %d #[fg=white]%H:%M'

# default statusbar colors 
set -g status-fg white
#set -g status-bg black
set -g status-bg default
set -g status-attr bright

# default window title colors
set-window-option -g window-status-fg white
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# C-b is not acceptable -- Vim uses it
#unbind C-b
#set-option -g prefix C-a
bind-key C-a last-window
bind-key A last-pane
bind-key O select-pane -t :.-

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
#bind-key a send-prefix

# split windows with a pipe and dash
bind - splitw
bind | splitw -h

# Resize panes by repeatably tapping
bind-key -r J resize-pane -D 3
bind-key -r H resize-pane -L 3
bind-key -r K resize-pane -U 3
bind-key -r L resize-pane -R 3

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Highlight active window
set-window-option -g window-status-current-bg red

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename

# rm mouse mode fail
set -g mode-mouse off

# color
#set -g default-terminal "screen-256color"

# pbcopy
#set-option -g default-command "reattach-to-user-namespace -l zsh"

# http://unix.stackexchange.com/questions/26548/write-all-tmux-scrollback-to-a-file
# The process for capturing the full scrollback is then:
#
# Prefix Esc : to enter copy mode
#
# v : to begin visual selection (assuming you are already at the bottom of the screen)
#
# g g : to capture everything in the scrollback
#
# y : to yank it into the buffer
#
# Prefix c : open another tmux window
#
# vim scrollback.txt
# i : enter insert mode in vim
#
# Prefix p : paste into file
bind Escape copy-mode
#unbind p
#bind p paste-buffer

# http://superuser.com/questions/600286/move-pane-to-a-new-window-in-tmux
# Move pane to new window (break-pane) or move window to pane (join-pane)
bind-key C-j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key C-s command-prompt -p "send pane to:"  "join-pane -t '%%'"
bind-key b break-pane

